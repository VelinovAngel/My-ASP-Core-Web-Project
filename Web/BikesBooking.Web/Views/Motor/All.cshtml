@model AllMotorcylesQueryDto

@{
    this.ViewData["Title"] = "My motorcycles";
}

@if (this.TempData.ContainsKey("Message"))
{
    <div class="alert alert-success alert-dismissible fade show">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        @this.TempData["Message"]
    </div>
}


<h1 class="text-center mt-2">My Collection</h1>

<form method="get">
    <div class="row mt-2 mb-4">
        @foreach (var motorcycle in Model.Motors)
        {
            <div class="card col-6 col-lg-3 ">
                <img src="@motorcycle.Url"
                     class="motor-img-top img-fluid img-thumbnail motor-image" style="width: 300px; height: 180px;">
                <div class="motor-body">
                    <h3 class="motor-title text-center" data-toggle="tooltip">
                        @motorcycle.Manufacturer
                    </h3>
                    <h5 class="text-center" data-toggle="tooltip">
                        @motorcycle.Model
                    </h5>
                    <h4 class="motor-title text-center" data-toggle="tooltip" data-placement="bottom"
                        title="@motorcycle.Description">
                        Description:
                    </h4>
                    <ul class="list-group list-group-flush text-center">
                        <li class="list-group-item text-center">Type : @motorcycle.Type</li>
                        <li class="list-group-item">
                            <span class="motor-stat">@motorcycle.CubicCentimetre c.c.</span>
                        </li>
                        <li class="list-group-item">
                            <span class="price-stat">@motorcycle.Price Euro</span>
                        </li>
                    </ul>
                    <div class="card-footer">
                        <small class="text-muted">
                            Last updated @motorcycle.AddedOn
                        </small>
                    </div>
                    <br />
                    <a asp-controller="Motor" asp-action="Offer" asp-route-id="@motorcycle.Id" class="btn btn-block btn-success">Offer</a>
                    <a asp-controller="Motor" asp-action="Edit" asp-route-id="@motorcycle.Id" class="btn btn-block btn-warning">Edit</a>
                    <a asp-controller="Motor" asp-action="Remove" asp-route-id="@motorcycle.Id" class="btn btn-block btn-danger">Remove</a>
                </div>
            </div>
        }
    </div>
</form>

@{ var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalMotorcycle / AllMotorcyclesQueryModel.MotorcyclesPerPage);
}


@{ var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                                                 !Model.Motors.Any(); }

<hr />

<nav aria-label="...">
    <ul class="pagination justify-content-center">
        <li class="page-item disabled">
            <a class="btn @(Model.CurrentPage == 1 ? "disabled" : string.Empty)" asp-controller="Motor"
               asp-action="All"
               asp-route-currentPage="@previousPage">Previous</a>
        </li>
        @if (@Model.CurrentPage != 1)
        {
            <li class="page-item"><a class="page-link" href="#">@previousPage</a></li>
        }

        <li class="page-item active">
            <a class="page-link" href="#">@Model.CurrentPage<span class="sr-only">(current)</span></a>
        </li>

        @{
            var nextpage = Model.CurrentPage + 1;
        }

        <li class="page-item"><a class="page-link" href="#">@nextpage</a></li>

        <li class="page-item">
            <a class="btn @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
               asp-controller="Motor"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage + 1)">Next</a>
        </li>
    </ul>
</nav>


@if (!Model.Motors.Any())
{
    <h2 class="text-center">No more motorcycle!</h2>}


